<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>编程语言 on Dand&#39;s Blog</title>
    <link>https://dandkong.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</link>
    <description>Recent content in 编程语言 on Dand&#39;s Blog</description>
    <image>
      <title>Dand&#39;s Blog</title>
      <url>https://dandkong.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://dandkong.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.147.3</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 17 Jul 2024 22:07:01 +0800</lastBuildDate>
    <atom:link href="https://dandkong.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PuerTS学习路线</title>
      <link>https://dandkong.github.io/posts/puerts%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</link>
      <pubDate>Wed, 17 Jul 2024 22:07:01 +0800</pubDate>
      <guid>https://dandkong.github.io/posts/puerts%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近看到腾讯又出了个游戏脚本的热更方案，相对lua有以下的优势。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JavaScript生态有众多的库和工具链，结合专业商业引擎的渲染能力，快速打造游戏&lt;/p&gt;
&lt;p&gt;相比游戏领域常用的lua脚本，TypeScript的静态类型检查有助于编写更健壮，可维护性更好的程序&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://puerts.github.io/docs/puerts/unity/install/&#34;&gt;安装PuerTS | PUER Typescript&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装包到Unity，在合适的地方接入JSEnv&lt;/p&gt;
&lt;h2 id=&#34;自定义加载器&#34;&gt;自定义加载器&lt;/h2&gt;
&lt;p&gt;PuerTS自带一个加载器，通过Resource加载JS代码，但是实际开发的时候推荐的是TypeScript，需要转译到JS再执行。&lt;/p&gt;
&lt;p&gt;编辑器中推荐使用TS-Loader，编辑器中直接使用TS进行开发，没有其他需要关注的地方。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;提供一个PuerTS的Loader，使你在Editor下，可以直接读取TS。&lt;/p&gt;
&lt;p&gt;无需研究tsconfig、无需研究ESM、CommonJS，无需自行编译ts，无需理会和调试相关的debugpath/sourceMap/控制台跳转。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zombieyang/puerts-ts-loader&#34;&gt;https://github.com/zombieyang/puerts-ts-loader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;编辑器中直接使用TS开发，在发布时还需要编译成JS，参考ts-loader中的TSReleaser-Resources.cs函数，在发布资源前编译成JS。&lt;/p&gt;
&lt;p&gt;编译好的JS要支持热更，所以使用默认的加载器，自己定义一个加载器，传入的参数是JS的路径，返回的是JS的代码内容，结合项目的资源加载返回即可，我的Demo使用了YooAssets框架。&lt;/p&gt;
&lt;h2 id=&#34;调试&#34;&gt;调试&lt;/h2&gt;
&lt;p&gt;用类似NodeJs的方式调试即可。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://puerts.github.io/docs/puerts/unity/knowjs/debugging&#34;&gt;VSCode Debug 指引 | PUER Typescript&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ts学习&#34;&gt;TS学习&lt;/h2&gt;
&lt;p&gt;TS拥有静态类型检测，能编写更具有健壮性的代码，也有更多现有的资源。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jkchao.github.io/typescript-book-chinese/#why&#34;&gt;深入理解 TypeScript | 深入理解 TypeScript&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.typescriptlang.org/docs/handbook/intro.html&#34;&gt;Handbook - The TypeScript Handbook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ts.xcatliu.com/&#34;&gt;TypeScript 入门教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://es6.ruanyifeng.com/&#34;&gt;ES6 入门教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bosens-china.github.io/Typescript-manual/describe/&#34;&gt;前言 | TypeScript手册&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lua知识点总结</title>
      <link>https://dandkong.github.io/posts/lua%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 11 Apr 2023 21:40:59 +0800</pubDate>
      <guid>https://dandkong.github.io/posts/lua%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</guid>
      <description>Lua知识点总结</description>
    </item>
    <item>
      <title>STL总结</title>
      <link>https://dandkong.github.io/posts/stl%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 02 Apr 2023 23:41:05 +0800</pubDate>
      <guid>https://dandkong.github.io/posts/stl%E6%80%BB%E7%BB%93/</guid>
      <description>STL种类以及其底层实现</description>
    </item>
  </channel>
</rss>
